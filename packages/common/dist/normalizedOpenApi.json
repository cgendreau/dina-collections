{
  "openapi": "3.0.0",
  "info": {
    "title": "Dina api",
    "contact": {
      "email": "oberg.anton@gmail.com"
    },
    "license": {
      "name": "GNU Affero General Public License",
      "url": "https://www.gnu.org/licenses/agpl-3.0.en.html"
    },
    "version": "0.1.0",
    "description": "Note this is a quick draft.\n\n* All the resources are prefixed with c (as in Canada) to avoid collisions. Ofc this is temporary\n\n* Taxon under classification are called ccTaxon which also is a temporary hack to avoid name collisions\n\n* Based on the [datamodel](https://github.com/DINA-Web/taxonomy/blob/master/docs/taxonomy_concept_diagram_multiple.png)\n",
    "x-versionInfo": "# This is some version specific information\n"
  },
  "servers": [
    {
      "description": "Alpha api server",
      "url": "https://alpha-api.dina-web.net"
    },
    {
      "description": "Auth server",
      "url": "https://alpha-keycloak.dina-web.net"
    },
    {
      "description": "Local api server",
      "url": "http://127.0.0.1:4444"
    },
    {
      "description": "Slim taxonomy",
      "url": "https://alpha-slimtaxonomy.dina-web.net"
    }
  ],
  "tags": [
    {
      "description": "No description",
      "name": "cTaxonService"
    }
  ],
  "paths": {
    "/api/taxonomy/v01/cTaxons": {
      "post": {
        "operationId": "createCTaxon",
        "parameters": [
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/createCTaxonRequest"
              }
            }
          },
          "description": "successful operation"
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/createCTaxonResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/createCTaxon-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/createCTaxon-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create cTaxon",
        "tags": [
          "taxon",
          "cTaxonService"
        ]
      },
      "get": {
        "operationId": "getCTaxons",
        "parameters": [
          {
            "in": "query",
            "name": "filter[search]",
            "description": "Find taxons based on search ",
            "example": "vulpu",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter[year]",
            "description": "Filter by valid year in format xxxx",
            "example": "1986",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "relationships",
            "description": "Relationships to add to the response. Add 0 or many",
            "example": [
              "acceptedName",
              "synonymNames",
              "vernacularNames"
            ],
            "schema": {
              "items": {
                "enum": [
                  "all",
                  "acceptedName",
                  "synonymNames",
                  "vernacularNames"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limit the result",
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Offset the result",
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCTaxonsResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCTaxons-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCTaxons-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cTaxons",
        "tags": [
          "taxon",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cTaxons/{id}": {
      "patch": {
        "operationId": "updateCTaxon",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cTaxon id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/updateCTaxonRequest"
              }
            }
          },
          "description": "successful operation"
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCTaxonResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCTaxon-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCTaxon-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCTaxon-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Updates cTaxon",
        "tags": [
          "taxon",
          "cTaxonService"
        ]
      },
      "get": {
        "operationId": "getCTaxon",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cTaxon id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "relationships",
            "description": "Relationships to add to the response. Add 0 or many",
            "example": [
              "acceptedName",
              "synonymNames",
              "vernacularNames"
            ],
            "schema": {
              "items": {
                "enum": [
                  "all",
                  "acceptedName",
                  "synonymNames",
                  "vernacularNames"
                ],
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCTaxonResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCTaxon-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCTaxon-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCTaxon-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cTaxon by id",
        "tags": [
          "taxon",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cTaxons/{id}/relationships/synonymNames": {
      "get": {
        "operationId": "getCTaxonSynonymNames",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cTaxon id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCTaxonSynonymNamesResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCTaxonSynonymNames-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCTaxonSynonymNames-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCTaxonSynonymNames-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cTaxon -> synonymNames",
        "tags": [
          "taxon",
          "cTaxonService"
        ]
      },
      "patch": {
        "operationId": "updateCTaxonSynonymNames",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cTaxon id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/updateCTaxonSynonymNamesRequest"
              }
            }
          },
          "description": "successful operation"
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCTaxonSynonymNamesResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCTaxonSynonymNames-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCTaxonSynonymNames-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCTaxonSynonymNames-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update cTaxon -> synonymNames",
        "tags": [
          "taxon",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cTaxons/{id}/relationships/vernacularNames": {
      "get": {
        "operationId": "getCTaxonVernacularNames",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cTaxon id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCTaxonVernacularNamesResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCTaxonVernacularNames-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCTaxonVernacularNames-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCTaxonVernacularNames-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cTaxon -> vernacularNames",
        "tags": [
          "taxon",
          "cTaxonService"
        ]
      },
      "patch": {
        "operationId": "updateCTaxonVernacularNames",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cTaxon id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/updateCTaxonVernacularNamesRequest"
              }
            }
          },
          "description": "successful operation"
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCTaxonVernacularNamesResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCTaxonVernacularNames-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCTaxonVernacularNames-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCTaxonVernacularNames-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update cTaxon -> vernacularNames",
        "tags": [
          "taxon",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cTaxons/{id}/relationships/acceptedName": {
      "patch": {
        "operationId": "updateCTaxonAcceptedName",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cTaxon id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/updateCTaxonAcceptedNameRequest"
              }
            }
          },
          "description": "successful operation"
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCTaxonAcceptedNameResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCTaxonAcceptedName-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCTaxonAcceptedName-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCTaxonAcceptedName-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update cTaxon -> acceptedName",
        "tags": [
          "taxon",
          "cTaxonService"
        ]
      },
      "get": {
        "operationId": "getCTaxonAcceptedName",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cTaxon id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCTaxonAcceptedNameResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCTaxonAcceptedName-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCTaxonAcceptedName-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCTaxonAcceptedName-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cTaxon -> acceptedName",
        "tags": [
          "taxon",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cTaxons/{id}/versions/{versionId}": {
      "get": {
        "description": "The id of the returned resource is the versionId and not the ordinary id",
        "operationId": "getCTaxonVersion",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cTaxon id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "versionId",
            "description": "cTaxon versionId",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCTaxonVersionResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCTaxonVersion-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCTaxonVersion-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCTaxonVersion-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cTaxon version by id and versionId",
        "tags": [
          "taxon",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cTaxons/{id}/versions": {
      "get": {
        "operationId": "getCTaxonVersions",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cTaxon id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCTaxonVersionsResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCTaxonVersions-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCTaxonVersions-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cTaxons versions",
        "tags": [
          "taxon",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cNames": {
      "post": {
        "operationId": "createCName",
        "parameters": [
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/createCNameRequest"
              }
            }
          },
          "description": "successful operation"
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/createCNameResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/createCName-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/createCName-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create cName",
        "tags": [
          "name",
          "cTaxonService"
        ]
      },
      "get": {
        "operationId": "getCNames",
        "parameters": [
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "relationships",
            "description": "Relationships to add to the response. Add 0 or many",
            "example": [
              "acceptedToTaxons",
              "basionym",
              "origin",
              "synonymToTaxons"
            ],
            "schema": {
              "items": {
                "enum": [
                  "all",
                  "acceptedToTaxons",
                  "basionym",
                  "origin",
                  "synonymToTaxons"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limit the result",
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Offset the result",
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNamesResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNames-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNames-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cNames",
        "tags": [
          "name",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cNames/{id}": {
      "patch": {
        "operationId": "updateCName",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cName id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/updateCNameRequest"
              }
            }
          },
          "description": "successful operation"
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCNameResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCName-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCName-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCName-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Updates cName",
        "tags": [
          "name",
          "cTaxonService"
        ]
      },
      "get": {
        "operationId": "getCName",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cName id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "relationships",
            "description": "Relationships to add to the response. Add 0 or many",
            "example": [
              "acceptedToTaxons",
              "basionym",
              "origin",
              "synonymToTaxons"
            ],
            "schema": {
              "items": {
                "enum": [
                  "all",
                  "acceptedToTaxons",
                  "basionym",
                  "origin",
                  "synonymToTaxons"
                ],
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNameResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCName-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCName-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCName-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cName by id",
        "tags": [
          "name",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cNames/{id}/relationships/acceptedToTaxons": {
      "get": {
        "operationId": "getCNameAcceptedToTaxons",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cName id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNameAcceptedToTaxonsResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNameAcceptedToTaxons-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNameAcceptedToTaxons-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNameAcceptedToTaxons-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cName -> acceptedToTaxons",
        "tags": [
          "name",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cNames/{id}/relationships/basionym": {
      "get": {
        "operationId": "getCNameBasionym",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cName id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNameBasionymResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNameBasionym-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNameBasionym-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNameBasionym-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cName -> basionym",
        "tags": [
          "name",
          "cTaxonService"
        ]
      },
      "patch": {
        "operationId": "updateCNameBasionym",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cName id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/updateCNameBasionymRequest"
              }
            }
          },
          "description": "successful operation"
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCNameBasionymResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCNameBasionym-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCNameBasionym-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCNameBasionym-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update cName -> basionym",
        "tags": [
          "name",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cNames/{id}/relationships/origin": {
      "get": {
        "operationId": "getCNameOrigin",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cName id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNameOriginResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNameOrigin-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNameOrigin-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNameOrigin-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cName -> origin",
        "tags": [
          "name",
          "cTaxonService"
        ]
      },
      "patch": {
        "operationId": "updateCNameOrigin",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cName id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/updateCNameOriginRequest"
              }
            }
          },
          "description": "successful operation"
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCNameOriginResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCNameOrigin-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCNameOrigin-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCNameOrigin-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update cName -> origin",
        "tags": [
          "name",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cNames/{id}/relationships/synonymToTaxons": {
      "get": {
        "operationId": "getCNameSynonymToTaxons",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cName id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNameSynonymToTaxonsResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNameSynonymToTaxons-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNameSynonymToTaxons-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNameSynonymToTaxons-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cName -> synonymToTaxons",
        "tags": [
          "name",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cNames/{id}/versions/{versionId}": {
      "get": {
        "description": "The id of the returned resource is the versionId and not the ordinary id",
        "operationId": "getCNameVersion",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cName id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "versionId",
            "description": "cName versionId",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNameVersionResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNameVersion-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNameVersion-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNameVersion-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cName version by id and versionId",
        "tags": [
          "name",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cNames/{id}/versions": {
      "get": {
        "operationId": "getCNameVersions",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cName id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNameVersionsResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNameVersions-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNameVersions-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cNames versions",
        "tags": [
          "name",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cVernacularNames": {
      "post": {
        "operationId": "createCVernacularName",
        "parameters": [
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/createCVernacularNameRequest"
              }
            }
          },
          "description": "successful operation"
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/createCVernacularNameResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/createCVernacularName-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/createCVernacularName-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create cVernacularName",
        "tags": [
          "vernacularName",
          "cTaxonService"
        ]
      },
      "get": {
        "operationId": "getCVernacularNames",
        "parameters": [
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "relationships",
            "description": "Relationships to add to the response. Add 0 or many",
            "example": [
              "taxons"
            ],
            "schema": {
              "items": {
                "enum": [
                  "all",
                  "taxons"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limit the result",
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Offset the result",
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCVernacularNamesResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCVernacularNames-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCVernacularNames-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cVernacularNames",
        "tags": [
          "vernacularName",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cVernacularNames/{id}": {
      "patch": {
        "operationId": "updateCVernacularName",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cVernacularName id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/updateCVernacularNameRequest"
              }
            }
          },
          "description": "successful operation"
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCVernacularNameResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCVernacularName-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCVernacularName-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCVernacularName-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Updates cVernacularName",
        "tags": [
          "vernacularName",
          "cTaxonService"
        ]
      },
      "get": {
        "operationId": "getCVernacularName",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cVernacularName id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "relationships",
            "description": "Relationships to add to the response. Add 0 or many",
            "example": [
              "taxons"
            ],
            "schema": {
              "items": {
                "enum": [
                  "all",
                  "taxons"
                ],
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCVernacularNameResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCVernacularName-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCVernacularName-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCVernacularName-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cVernacularName by id",
        "tags": [
          "vernacularName",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cVernacularNames/{id}/relationships/taxons": {
      "get": {
        "operationId": "getCVernacularNameTaxons",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cVernacularName id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCVernacularNameTaxonsResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCVernacularNameTaxons-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCVernacularNameTaxons-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCVernacularNameTaxons-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cVernacularName -> taxons",
        "tags": [
          "vernacularName",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cVernacularNames/{id}/versions/{versionId}": {
      "get": {
        "description": "The id of the returned resource is the versionId and not the ordinary id",
        "operationId": "getCVernacularNameVersion",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cVernacularName id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "versionId",
            "description": "cVernacularName versionId",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCVernacularNameVersionResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCVernacularNameVersion-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCVernacularNameVersion-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCVernacularNameVersion-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cVernacularName version by id and versionId",
        "tags": [
          "vernacularName",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cVernacularNames/{id}/versions": {
      "get": {
        "operationId": "getCVernacularNameVersions",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cVernacularName id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCVernacularNameVersionsResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCVernacularNameVersions-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCVernacularNameVersions-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cVernacularNames versions",
        "tags": [
          "vernacularName",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/classifications/{id}/ccTaxons": {
      "post": {
        "operationId": "createCcTaxon",
        "parameters": [
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/createCcTaxonRequest"
              }
            }
          },
          "description": "successful operation"
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/createCcTaxonResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/createCcTaxon-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/createCcTaxon-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create ccTaxon",
        "tags": [
          "classification - taxon",
          "cTaxonService"
        ]
      },
      "get": {
        "operationId": "getCcTaxons",
        "parameters": [
          {
            "in": "query",
            "name": "descendants.filter[rank]",
            "description": "Filter included descendants to only include specified ranks",
            "example": "1986",
            "required": false,
            "schema": {
              "items": {
                "type": "string",
                "enum": [
                  "animalia",
                  "carnivora"
                ]
              },
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "descendants.limit",
            "description": "Limit number of descendants",
            "example": "100",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "filter[mrca]",
            "description": "Not sure :)",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "filter[search]",
            "description": "Find taxons based on search ",
            "example": "vulpu",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter[year]",
            "description": "Filter by valid year in format xxxx",
            "example": "1986",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "relationships",
            "description": "Relationships to add to the response. Add 0 or many",
            "example": [
              "acceptedName",
              "ancestors",
              "children",
              "descendants",
              "parent",
              "synonymNames",
              "vernacularNames"
            ],
            "schema": {
              "items": {
                "enum": [
                  "all",
                  "acceptedName",
                  "ancestors",
                  "children",
                  "descendants",
                  "parent",
                  "synonymNames",
                  "vernacularNames"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limit the result",
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Offset the result",
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonsResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxons-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxons-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find ccTaxons",
        "tags": [
          "classification - taxon",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/classifications/{id}/ccTaxons/{id}": {
      "patch": {
        "operationId": "updateCcTaxon",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ccTaxon id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/updateCcTaxonRequest"
              }
            }
          },
          "description": "successful operation"
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCcTaxonResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCcTaxon-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCcTaxon-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCcTaxon-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Updates ccTaxon",
        "tags": [
          "classification - taxon",
          "cTaxonService"
        ]
      },
      "get": {
        "operationId": "getCcTaxon",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ccTaxon id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "relationships",
            "description": "Relationships to add to the response. Add 0 or many",
            "example": [
              "acceptedName",
              "ancestors",
              "children",
              "descendants",
              "parent",
              "synonymNames",
              "vernacularNames"
            ],
            "schema": {
              "items": {
                "enum": [
                  "all",
                  "acceptedName",
                  "ancestors",
                  "children",
                  "descendants",
                  "parent",
                  "synonymNames",
                  "vernacularNames"
                ],
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxon-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxon-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxon-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find ccTaxon by id",
        "tags": [
          "classification - taxon",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/classifications/{id}/ccTaxons/{id}/relationships/ancestors": {
      "get": {
        "operationId": "getCcTaxonAncestors",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ccTaxon id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonAncestorsResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonAncestors-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonAncestors-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonAncestors-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find ccTaxon -> ancestors",
        "tags": [
          "classification - taxon",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/classifications/{id}/ccTaxons/{id}/relationships/children": {
      "get": {
        "operationId": "getCcTaxonChildren",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ccTaxon id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonChildrenResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonChildren-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonChildren-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonChildren-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find ccTaxon -> children",
        "tags": [
          "classification - taxon",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/classifications/{id}/ccTaxons/{id}/relationships/descendants": {
      "get": {
        "operationId": "getCcTaxonDescendants",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ccTaxon id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonDescendantsResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonDescendants-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonDescendants-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonDescendants-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find ccTaxon -> descendants",
        "tags": [
          "classification - taxon",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/classifications/{id}/ccTaxons/{id}/relationships/synonymNames": {
      "get": {
        "operationId": "getCcTaxonSynonymNames",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ccTaxon id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonSynonymNamesResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonSynonymNames-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonSynonymNames-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonSynonymNames-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find ccTaxon -> synonymNames",
        "tags": [
          "classification - taxon",
          "cTaxonService"
        ]
      },
      "patch": {
        "operationId": "updateCcTaxonSynonymNames",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ccTaxon id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/updateCcTaxonSynonymNamesRequest"
              }
            }
          },
          "description": "successful operation"
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCcTaxonSynonymNamesResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCcTaxonSynonymNames-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCcTaxonSynonymNames-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCcTaxonSynonymNames-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update ccTaxon -> synonymNames",
        "tags": [
          "classification - taxon",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/classifications/{id}/ccTaxons/{id}/relationships/vernacularNames": {
      "get": {
        "operationId": "getCcTaxonVernacularNames",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ccTaxon id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonVernacularNamesResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonVernacularNames-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonVernacularNames-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonVernacularNames-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find ccTaxon -> vernacularNames",
        "tags": [
          "classification - taxon",
          "cTaxonService"
        ]
      },
      "patch": {
        "operationId": "updateCcTaxonVernacularNames",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ccTaxon id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/updateCcTaxonVernacularNamesRequest"
              }
            }
          },
          "description": "successful operation"
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCcTaxonVernacularNamesResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCcTaxonVernacularNames-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCcTaxonVernacularNames-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCcTaxonVernacularNames-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update ccTaxon -> vernacularNames",
        "tags": [
          "classification - taxon",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/classifications/{id}/ccTaxons/{id}/relationships/acceptedName": {
      "patch": {
        "operationId": "updateCcTaxonAcceptedName",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ccTaxon id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/updateCcTaxonAcceptedNameRequest"
              }
            }
          },
          "description": "successful operation"
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCcTaxonAcceptedNameResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCcTaxonAcceptedName-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCcTaxonAcceptedName-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCcTaxonAcceptedName-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update ccTaxon -> acceptedName",
        "tags": [
          "classification - taxon",
          "cTaxonService"
        ]
      },
      "get": {
        "operationId": "getCcTaxonAcceptedName",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ccTaxon id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonAcceptedNameResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonAcceptedName-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonAcceptedName-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonAcceptedName-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find ccTaxon -> acceptedName",
        "tags": [
          "classification - taxon",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/classifications/{id}/ccTaxons/{id}/relationships/parent": {
      "patch": {
        "operationId": "updateCcTaxonParent",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ccTaxon id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/updateCcTaxonParentRequest"
              }
            }
          },
          "description": "successful operation"
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCcTaxonParentResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCcTaxonParent-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCcTaxonParent-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCcTaxonParent-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update ccTaxon -> parent",
        "tags": [
          "classification - taxon",
          "cTaxonService"
        ]
      },
      "get": {
        "operationId": "getCcTaxonParent",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ccTaxon id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonParentResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonParent-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonParent-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonParent-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find ccTaxon -> parent",
        "tags": [
          "classification - taxon",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/classifications/{id}/ccTaxons/{id}/versions/{versionId}": {
      "get": {
        "description": "The id of the returned resource is the versionId and not the ordinary id",
        "operationId": "getCcTaxonVersion",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ccTaxon id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "versionId",
            "description": "ccTaxon versionId",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonVersionResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonVersion-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonVersion-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonVersion-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find ccTaxon version by id and versionId",
        "tags": [
          "classification - taxon",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/classifications/{id}/ccTaxons/{id}/versions": {
      "get": {
        "operationId": "getCcTaxonVersions",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ccTaxon id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonVersionsResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonVersions-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCcTaxonVersions-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find ccTaxons versions",
        "tags": [
          "classification - taxon",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cNodes": {
      "post": {
        "operationId": "createCNode",
        "parameters": [
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/createCNodeRequest"
              }
            }
          },
          "description": "successful operation"
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/createCNodeResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/createCNode-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/createCNode-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create cNode",
        "tags": [
          "node",
          "cTaxonService"
        ]
      },
      "get": {
        "operationId": "getCNodes",
        "parameters": [
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "relationships",
            "description": "Relationships to add to the response. Add 0 or many",
            "example": [
              "childTaxon",
              "classification",
              "parentTaxon"
            ],
            "schema": {
              "items": {
                "enum": [
                  "all",
                  "childTaxon",
                  "classification",
                  "parentTaxon"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limit the result",
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Offset the result",
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNodesResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNodes-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNodes-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cNodes",
        "tags": [
          "node",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cNodes/{id}": {
      "patch": {
        "operationId": "updateCNode",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cNode id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/updateCNodeRequest"
              }
            }
          },
          "description": "successful operation"
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCNodeResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCNode-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCNode-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCNode-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Updates cNode",
        "tags": [
          "node",
          "cTaxonService"
        ]
      },
      "get": {
        "operationId": "getCNode",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cNode id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "relationships",
            "description": "Relationships to add to the response. Add 0 or many",
            "example": [
              "childTaxon",
              "classification",
              "parentTaxon"
            ],
            "schema": {
              "items": {
                "enum": [
                  "all",
                  "childTaxon",
                  "classification",
                  "parentTaxon"
                ],
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNodeResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNode-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNode-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNode-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cNode by id",
        "tags": [
          "node",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cNodes/{id}/relationships/childTaxon": {
      "get": {
        "operationId": "getCNodeChildTaxon",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cNode id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNodeChildTaxonResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNodeChildTaxon-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNodeChildTaxon-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNodeChildTaxon-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cNode -> childTaxon",
        "tags": [
          "node",
          "cTaxonService"
        ]
      },
      "patch": {
        "operationId": "updateCNodeChildTaxon",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cNode id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/updateCNodeChildTaxonRequest"
              }
            }
          },
          "description": "successful operation"
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCNodeChildTaxonResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCNodeChildTaxon-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCNodeChildTaxon-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCNodeChildTaxon-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update cNode -> childTaxon",
        "tags": [
          "node",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cNodes/{id}/relationships/classification": {
      "get": {
        "operationId": "getCNodeClassification",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cNode id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNodeClassificationResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNodeClassification-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNodeClassification-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNodeClassification-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cNode -> classification",
        "tags": [
          "node",
          "cTaxonService"
        ]
      },
      "patch": {
        "operationId": "updateCNodeClassification",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cNode id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/updateCNodeClassificationRequest"
              }
            }
          },
          "description": "successful operation"
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCNodeClassificationResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCNodeClassification-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCNodeClassification-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCNodeClassification-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update cNode -> classification",
        "tags": [
          "node",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cNodes/{id}/relationships/parentTaxon": {
      "get": {
        "operationId": "getCNodeParentTaxon",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cNode id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNodeParentTaxonResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNodeParentTaxon-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNodeParentTaxon-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNodeParentTaxon-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cNode -> parentTaxon",
        "tags": [
          "node",
          "cTaxonService"
        ]
      },
      "patch": {
        "operationId": "updateCNodeParentTaxon",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cNode id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/updateCNodeParentTaxonRequest"
              }
            }
          },
          "description": "successful operation"
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCNodeParentTaxonResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCNodeParentTaxon-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCNodeParentTaxon-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCNodeParentTaxon-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update cNode -> parentTaxon",
        "tags": [
          "node",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cNodes/{id}/versions/{versionId}": {
      "get": {
        "description": "The id of the returned resource is the versionId and not the ordinary id",
        "operationId": "getCNodeVersion",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cNode id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "versionId",
            "description": "cNode versionId",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNodeVersionResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNodeVersion-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNodeVersion-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNodeVersion-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cNode version by id and versionId",
        "tags": [
          "node",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cNodes/{id}/versions": {
      "get": {
        "operationId": "getCNodeVersions",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cNode id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNodeVersionsResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNodeVersions-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCNodeVersions-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cNodes versions",
        "tags": [
          "node",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cClassifications": {
      "post": {
        "operationId": "createCClassification",
        "parameters": [
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/createCClassificationRequest"
              }
            }
          },
          "description": "successful operation"
        },
        "responses": {
          "201": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/createCClassificationResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/createCClassification-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/createCClassification-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Create cClassification",
        "tags": [
          "classification",
          "cTaxonService"
        ]
      },
      "get": {
        "operationId": "getCClassifications",
        "parameters": [
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "relationships",
            "description": "Relationships to add to the response. Add 0 or many",
            "example": [
              "nodes"
            ],
            "schema": {
              "items": {
                "enum": [
                  "all",
                  "nodes"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limit the result",
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Offset the result",
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCClassificationsResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCClassifications-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCClassifications-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cClassifications",
        "tags": [
          "classification",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cClassifications/{id}": {
      "patch": {
        "operationId": "updateCClassification",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cClassification id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.api+json": {
              "schema": {
                "$ref": "#/components/schemas/updateCClassificationRequest"
              }
            }
          },
          "description": "successful operation"
        },
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCClassificationResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCClassification-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCClassification-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/updateCClassification-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Updates cClassification",
        "tags": [
          "classification",
          "cTaxonService"
        ]
      },
      "get": {
        "operationId": "getCClassification",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cClassification id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "relationships",
            "description": "Relationships to add to the response. Add 0 or many",
            "example": [
              "nodes"
            ],
            "schema": {
              "items": {
                "enum": [
                  "all",
                  "nodes"
                ],
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCClassificationResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCClassification-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCClassification-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCClassification-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cClassification by id",
        "tags": [
          "classification",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cClassifications/{id}/relationships/nodes": {
      "get": {
        "operationId": "getCClassificationNodes",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cClassification id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCClassificationNodesResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCClassificationNodes-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCClassificationNodes-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCClassificationNodes-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cClassification -> nodes",
        "tags": [
          "classification",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cClassifications/{id}/versions/{versionId}": {
      "get": {
        "description": "The id of the returned resource is the versionId and not the ordinary id",
        "operationId": "getCClassificationVersion",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cClassification id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "versionId",
            "description": "cClassification versionId",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCClassificationVersionResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCClassificationVersion-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "404": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCClassificationVersion-404"
                }
              }
            },
            "description": "Error: 404"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCClassificationVersion-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cClassification version by id and versionId",
        "tags": [
          "classification",
          "cTaxonService"
        ]
      }
    },
    "/api/taxonomy/v01/cClassifications/{id}/versions": {
      "get": {
        "operationId": "getCClassificationVersions",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "cClassification id",
            "example": "1",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "exampleId",
            "description": "Set to return a specific example. If example dont exist 404 will be returned. Only active when combined with mock parameter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "mock",
            "description": "Will return mock data",
            "example": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCClassificationVersionsResponse"
                }
              }
            },
            "description": "this is a desc"
          },
          "400": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCClassificationVersions-400"
                }
              }
            },
            "description": "Error: 400"
          },
          "500": {
            "content": {
              "application/vnd.api+json": {
                "schema": {
                  "$ref": "#/components/schemas/getCClassificationVersions-500"
                }
              }
            },
            "description": "Error: 500"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Find cClassifications versions",
        "tags": [
          "classification",
          "cTaxonService"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "400": {
        "description": "Bad Request",
        "example": "400",
        "title": "400",
        "type": "integer"
      },
      "404": {
        "description": "Not Found",
        "example": "404",
        "title": "404",
        "type": "integer"
      },
      "500": {
        "description": "Internal Server Error",
        "example": "500",
        "title": "500",
        "type": "integer"
      },
      "cClassification": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "x-category": "taxonomyApi",
        "x-modelType": "model",
        "description": ""
      },
      "cName": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "scientificName": {
            "type": "string"
          },
          "basionym": {
            "$ref": "#/components/schemas/cName"
          },
          "nameType": {
            "type": "string",
            "enum": [
              "scientific"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "ok",
              "illegitimate"
            ]
          },
          "originName": {
            "$ref": "#/components/schemas/cName"
          },
          "origin": {
            "type": "string",
            "enum": [
              "proparte",
              "autonym"
            ]
          }
        },
        "x-category": "taxonomyApi",
        "x-modelType": "model",
        "description": ""
      },
      "cNode": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "x-category": "taxonomyApi",
        "x-modelType": "model",
        "description": ""
      },
      "cTaxon": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "x-category": "taxonomyApi",
        "x-modelType": "model",
        "description": ""
      },
      "cVernacularName": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          },
          "language": {
            "type": "string"
          }
        },
        "x-category": "taxonomyApi",
        "x-modelType": "model",
        "description": ""
      },
      "ccTaxon": {
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "x-category": "taxonomyApi",
        "x-modelType": "model",
        "description": ""
      },
      "BaseError": {
        "properties": {
          "description": {
            "description": "Description of the returned code",
            "type": "string"
          },
          "detail": {
            "description": "A human-readable explanation specific to this occurrence of the problem.",
            "type": "string"
          },
          "id": {
            "description": "A unique identifier for this particular occurrence of the problem.",
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "parameterErrors": {
            "type": "string"
          },
          "title": {
            "description": "A short, human-readable summary of the problem. Associated with the code",
            "type": "string"
          }
        },
        "required": [
          "status",
          "code"
        ],
        "title": "Base error",
        "type": "object"
      },
      "REQUEST_BODY_VALIDATION_ERROR": {
        "description": "Input body does not pass validations",
        "example": "REQUEST_BODY_VALIDATION_ERROR",
        "title": "REQUEST_BODY_VALIDATION_ERROR",
        "type": "string"
      },
      "REQUEST_ERROR": {
        "description": "Something is wrong with the request. See details",
        "example": "REQUEST_ERROR",
        "title": "REQUEST_ERROR",
        "type": "string"
      },
      "createCTaxon-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_BODY_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "RESPONSE_VALIDATION_ERROR": {
        "description": "Output does not pass validations",
        "example": "RESPONSE_VALIDATION_ERROR",
        "title": "RESPONSE_VALIDATION_ERROR",
        "type": "string"
      },
      "INTERNAL_SERVER_ERROR": {
        "description": "Error occurred on server",
        "example": "INTERNAL_SERVER_ERROR",
        "title": "INTERNAL_SERVER_ERROR",
        "type": "string"
      },
      "createCTaxon-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "updateCTaxon-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_BODY_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "RESOURCE_NOT_FOUND_ERROR": {
        "description": "Requested resource not found. See details",
        "example": "RESOURCE_NOT_FOUND_ERROR",
        "title": "RESOURCE_NOT_FOUND_ERROR",
        "type": "string"
      },
      "updateCTaxon-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "updateCTaxon-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCTaxonSynonymNames-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCTaxonSynonymNames-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCTaxonSynonymNames-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "updateCTaxonSynonymNames-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_BODY_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "updateCTaxonSynonymNames-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "updateCTaxonSynonymNames-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCTaxonVernacularNames-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCTaxonVernacularNames-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCTaxonVernacularNames-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "updateCTaxonVernacularNames-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_BODY_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "updateCTaxonVernacularNames-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "updateCTaxonVernacularNames-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "updateCTaxonAcceptedName-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_BODY_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "updateCTaxonAcceptedName-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "updateCTaxonAcceptedName-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCTaxonAcceptedName-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCTaxonAcceptedName-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCTaxonAcceptedName-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCTaxon-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCTaxon-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCTaxon-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCTaxons-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCTaxons-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCTaxonVersion-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCTaxonVersion-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCTaxonVersion-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCTaxonVersions-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCTaxonVersions-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "createCName-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_BODY_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "createCName-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "updateCName-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_BODY_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "updateCName-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "updateCName-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCNameAcceptedToTaxons-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCNameAcceptedToTaxons-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCNameAcceptedToTaxons-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCNameBasionym-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCNameBasionym-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCNameBasionym-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "updateCNameBasionym-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_BODY_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "updateCNameBasionym-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "updateCNameBasionym-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCNameOrigin-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCNameOrigin-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCNameOrigin-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "updateCNameOrigin-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_BODY_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "updateCNameOrigin-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "updateCNameOrigin-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCNameSynonymToTaxons-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCNameSynonymToTaxons-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCNameSynonymToTaxons-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCName-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCName-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCName-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCNames-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCNames-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCNameVersion-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCNameVersion-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCNameVersion-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCNameVersions-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCNameVersions-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "createCVernacularName-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_BODY_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "createCVernacularName-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "updateCVernacularName-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_BODY_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "updateCVernacularName-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "updateCVernacularName-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCVernacularNameTaxons-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCVernacularNameTaxons-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCVernacularNameTaxons-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCVernacularName-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCVernacularName-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCVernacularName-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCVernacularNames-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCVernacularNames-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCVernacularNameVersion-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCVernacularNameVersion-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCVernacularNameVersion-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCVernacularNameVersions-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCVernacularNameVersions-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "createCcTaxon-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_BODY_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "createCcTaxon-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "updateCcTaxon-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_BODY_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "updateCcTaxon-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "updateCcTaxon-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCcTaxonAncestors-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCcTaxonAncestors-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCcTaxonAncestors-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCcTaxonChildren-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCcTaxonChildren-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCcTaxonChildren-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCcTaxonDescendants-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCcTaxonDescendants-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCcTaxonDescendants-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCcTaxonSynonymNames-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCcTaxonSynonymNames-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCcTaxonSynonymNames-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "updateCcTaxonSynonymNames-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_BODY_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "updateCcTaxonSynonymNames-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "updateCcTaxonSynonymNames-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCcTaxonVernacularNames-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCcTaxonVernacularNames-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCcTaxonVernacularNames-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "updateCcTaxonVernacularNames-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_BODY_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "updateCcTaxonVernacularNames-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "updateCcTaxonVernacularNames-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "updateCcTaxonAcceptedName-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_BODY_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "updateCcTaxonAcceptedName-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "updateCcTaxonAcceptedName-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCcTaxonAcceptedName-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCcTaxonAcceptedName-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCcTaxonAcceptedName-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "updateCcTaxonParent-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_BODY_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "updateCcTaxonParent-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "updateCcTaxonParent-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCcTaxonParent-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCcTaxonParent-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCcTaxonParent-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCcTaxon-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCcTaxon-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCcTaxon-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCcTaxons-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCcTaxons-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCcTaxonVersion-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCcTaxonVersion-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCcTaxonVersion-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCcTaxonVersions-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCcTaxonVersions-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "createCNode-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_BODY_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "createCNode-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "updateCNode-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_BODY_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "updateCNode-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "updateCNode-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCNodeChildTaxon-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCNodeChildTaxon-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCNodeChildTaxon-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "updateCNodeChildTaxon-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_BODY_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "updateCNodeChildTaxon-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "updateCNodeChildTaxon-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCNodeClassification-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCNodeClassification-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCNodeClassification-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "updateCNodeClassification-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_BODY_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "updateCNodeClassification-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "updateCNodeClassification-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCNodeParentTaxon-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCNodeParentTaxon-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCNodeParentTaxon-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "updateCNodeParentTaxon-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_BODY_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "updateCNodeParentTaxon-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "updateCNodeParentTaxon-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCNode-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCNode-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCNode-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCNodes-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCNodes-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCNodeVersion-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCNodeVersion-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCNodeVersion-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCNodeVersions-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCNodeVersions-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "createCClassification-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_BODY_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "createCClassification-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "updateCClassification-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_BODY_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "updateCClassification-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "updateCClassification-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCClassificationNodes-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCClassificationNodes-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCClassificationNodes-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCClassification-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCClassification-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCClassification-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCClassifications-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCClassifications-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCClassificationVersion-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCClassificationVersion-404": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESOURCE_NOT_FOUND_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/404"
              }
            },
            "type": "object"
          }
        ],
        "title": "Not Found",
        "type": "object"
      },
      "getCClassificationVersion-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "getCClassificationVersions-400": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/REQUEST_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/400"
              }
            },
            "type": "object"
          }
        ],
        "title": "Bad Request",
        "type": "object"
      },
      "getCClassificationVersions-500": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseError"
          },
          {
            "properties": {
              "code": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RESPONSE_VALIDATION_ERROR"
                  },
                  {
                    "$ref": "#/components/schemas/INTERNAL_SERVER_ERROR"
                  }
                ]
              },
              "status": {
                "$ref": "#/components/schemas/500"
              }
            },
            "type": "object"
          }
        ],
        "title": "Internal Server Error",
        "type": "object"
      },
      "createCTaxonRequest": {
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "example": "1234"
              },
              "type": {
                "default": "cTaxon",
                "enum": [
                  "cTaxon"
                ],
                "type": "string"
              },
              "attributes": {
                "$ref": "#/components/schemas/cTaxon"
              },
              "relationships": {
                "properties": {
                  "acceptedName": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "synonymNames": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cName"
                              ],
                              "example": "cName",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "vernacularNames": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cVernacularName"
                              ],
                              "example": "cVernacularName",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "x-examples": {},
        "description": ""
      },
      "updateCTaxonRequest": {
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "example": "1234"
              },
              "type": {
                "default": "cTaxon",
                "enum": [
                  "cTaxon"
                ],
                "type": "string"
              },
              "attributes": {
                "$ref": "#/components/schemas/cTaxon"
              },
              "relationships": {
                "properties": {
                  "acceptedName": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "synonymNames": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cName"
                              ],
                              "example": "cName",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "vernacularNames": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cVernacularName"
                              ],
                              "example": "cVernacularName",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "description": ""
      },
      "updateCTaxonSynonymNamesRequest": {
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "default": "cName",
                  "enum": [
                    "cName"
                  ],
                  "type": "string"
                },
                "id": {
                  "type": "string",
                  "example": "1234"
                }
              }
            }
          }
        },
        "description": ""
      },
      "updateCTaxonVernacularNamesRequest": {
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "default": "cVernacularName",
                  "enum": [
                    "cVernacularName"
                  ],
                  "type": "string"
                },
                "id": {
                  "type": "string",
                  "example": "1234"
                }
              }
            }
          }
        },
        "description": ""
      },
      "updateCTaxonAcceptedNameRequest": {
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "example": "1234"
              },
              "type": {
                "default": "cName",
                "enum": [
                  "cName"
                ],
                "type": "string"
              }
            }
          }
        },
        "description": ""
      },
      "createCNameRequest": {
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "example": "1234"
              },
              "type": {
                "default": "cName",
                "enum": [
                  "cName"
                ],
                "type": "string"
              },
              "attributes": {
                "$ref": "#/components/schemas/cName"
              },
              "relationships": {
                "properties": {
                  "acceptedToTaxons": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "basionym": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "origin": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "synonymToTaxons": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "x-examples": {},
        "description": ""
      },
      "updateCNameRequest": {
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "example": "1234"
              },
              "type": {
                "default": "cName",
                "enum": [
                  "cName"
                ],
                "type": "string"
              },
              "attributes": {
                "$ref": "#/components/schemas/cName"
              },
              "relationships": {
                "properties": {
                  "acceptedToTaxons": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "basionym": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "origin": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "synonymToTaxons": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "description": ""
      },
      "updateCNameBasionymRequest": {
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "example": "1234"
              },
              "type": {
                "default": "cName",
                "enum": [
                  "cName"
                ],
                "type": "string"
              }
            }
          }
        },
        "description": ""
      },
      "updateCNameOriginRequest": {
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "example": "1234"
              },
              "type": {
                "default": "cName",
                "enum": [
                  "cName"
                ],
                "type": "string"
              }
            }
          }
        },
        "description": ""
      },
      "createCVernacularNameRequest": {
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "example": "1234"
              },
              "type": {
                "default": "cVernacularName",
                "enum": [
                  "cVernacularName"
                ],
                "type": "string"
              },
              "attributes": {
                "$ref": "#/components/schemas/cVernacularName"
              },
              "relationships": {
                "properties": {
                  "taxons": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "x-examples": {},
        "description": ""
      },
      "updateCVernacularNameRequest": {
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "example": "1234"
              },
              "type": {
                "default": "cVernacularName",
                "enum": [
                  "cVernacularName"
                ],
                "type": "string"
              },
              "attributes": {
                "$ref": "#/components/schemas/cVernacularName"
              },
              "relationships": {
                "properties": {
                  "taxons": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "description": ""
      },
      "createCcTaxonRequest": {
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "example": "1234"
              },
              "type": {
                "default": "ccTaxon",
                "enum": [
                  "ccTaxon"
                ],
                "type": "string"
              },
              "attributes": {
                "$ref": "#/components/schemas/ccTaxon"
              },
              "relationships": {
                "properties": {
                  "acceptedName": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "ancestors": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "descendants": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "synonymNames": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cName"
                              ],
                              "example": "cName",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "vernacularNames": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cVernacularName"
                              ],
                              "example": "cVernacularName",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "x-examples": {},
        "description": ""
      },
      "updateCcTaxonRequest": {
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "example": "1234"
              },
              "type": {
                "default": "ccTaxon",
                "enum": [
                  "ccTaxon"
                ],
                "type": "string"
              },
              "attributes": {
                "$ref": "#/components/schemas/ccTaxon"
              },
              "relationships": {
                "properties": {
                  "acceptedName": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "ancestors": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "descendants": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "synonymNames": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cName"
                              ],
                              "example": "cName",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "vernacularNames": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cVernacularName"
                              ],
                              "example": "cVernacularName",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "description": ""
      },
      "updateCcTaxonSynonymNamesRequest": {
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "default": "cName",
                  "enum": [
                    "cName"
                  ],
                  "type": "string"
                },
                "id": {
                  "type": "string",
                  "example": "1234"
                }
              }
            }
          }
        },
        "description": ""
      },
      "updateCcTaxonVernacularNamesRequest": {
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "additionalProperties": false,
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "default": "cVernacularName",
                  "enum": [
                    "cVernacularName"
                  ],
                  "type": "string"
                },
                "id": {
                  "type": "string",
                  "example": "1234"
                }
              }
            }
          }
        },
        "description": ""
      },
      "updateCcTaxonAcceptedNameRequest": {
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "example": "1234"
              },
              "type": {
                "default": "cName",
                "enum": [
                  "cName"
                ],
                "type": "string"
              }
            }
          }
        },
        "description": ""
      },
      "updateCcTaxonParentRequest": {
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "example": "1234"
              },
              "type": {
                "default": "cTaxon",
                "enum": [
                  "cTaxon"
                ],
                "type": "string"
              }
            }
          }
        },
        "description": ""
      },
      "createCNodeRequest": {
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "example": "1234"
              },
              "type": {
                "default": "cNode",
                "enum": [
                  "cNode"
                ],
                "type": "string"
              },
              "attributes": {
                "$ref": "#/components/schemas/cNode"
              },
              "relationships": {
                "properties": {
                  "childTaxon": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "classification": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "parentTaxon": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "x-examples": {},
        "description": ""
      },
      "updateCNodeRequest": {
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "example": "1234"
              },
              "type": {
                "default": "cNode",
                "enum": [
                  "cNode"
                ],
                "type": "string"
              },
              "attributes": {
                "$ref": "#/components/schemas/cNode"
              },
              "relationships": {
                "properties": {
                  "childTaxon": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "classification": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "parentTaxon": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "description": ""
      },
      "updateCNodeChildTaxonRequest": {
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "example": "1234"
              },
              "type": {
                "default": "cTaxon",
                "enum": [
                  "cTaxon"
                ],
                "type": "string"
              }
            }
          }
        },
        "description": ""
      },
      "updateCNodeClassificationRequest": {
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "example": "1234"
              },
              "type": {
                "default": "cName",
                "enum": [
                  "cName"
                ],
                "type": "string"
              }
            }
          }
        },
        "description": ""
      },
      "updateCNodeParentTaxonRequest": {
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "example": "1234"
              },
              "type": {
                "default": "cTaxon",
                "enum": [
                  "cTaxon"
                ],
                "type": "string"
              }
            }
          }
        },
        "description": ""
      },
      "createCClassificationRequest": {
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "example": "1234"
              },
              "type": {
                "default": "cClassification",
                "enum": [
                  "cClassification"
                ],
                "type": "string"
              },
              "attributes": {
                "$ref": "#/components/schemas/cClassification"
              },
              "relationships": {
                "properties": {
                  "nodes": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cNode"
                              ],
                              "example": "cNode",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "x-examples": {},
        "description": ""
      },
      "updateCClassificationRequest": {
        "additionalProperties": false,
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "string",
                "example": "1234"
              },
              "type": {
                "default": "cClassification",
                "enum": [
                  "cClassification"
                ],
                "type": "string"
              },
              "attributes": {
                "$ref": "#/components/schemas/cClassification"
              },
              "relationships": {
                "properties": {
                  "nodes": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cNode"
                              ],
                              "example": "cNode",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "description": ""
      },
      "createCTaxonResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cTaxon"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "acceptedName": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "synonymNames": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cName"
                              ],
                              "example": "cName",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "vernacularNames": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cVernacularName"
                              ],
                              "example": "cVernacularName",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "cTaxon",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cTaxons",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "updateCTaxonResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cTaxon"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "acceptedName": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "synonymNames": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cName"
                              ],
                              "example": "cName",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "vernacularNames": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cVernacularName"
                              ],
                              "example": "cVernacularName",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "cTaxon",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cTaxons/{id}",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCTaxonSynonymNamesResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "properties": {
                "attributes": {
                  "$ref": "#/components/schemas/cName"
                },
                "id": {
                  "example": "1234",
                  "type": "string"
                },
                "type": {
                  "default": "cName",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cTaxons/{id}/relationships/synonymNames",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "updateCTaxonSynonymNamesResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "properties": {
                "attributes": {
                  "$ref": "#/components/schemas/cTaxon"
                },
                "id": {
                  "example": "1234",
                  "type": "string"
                },
                "type": {
                  "default": "cTaxon",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cTaxons/{id}/relationships/synonymNames",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCTaxonVernacularNamesResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "properties": {
                "attributes": {
                  "$ref": "#/components/schemas/cVernacularName"
                },
                "id": {
                  "example": "1234",
                  "type": "string"
                },
                "type": {
                  "default": "cVernacularName",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cTaxons/{id}/relationships/vernacularNames",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "updateCTaxonVernacularNamesResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "properties": {
                "attributes": {
                  "$ref": "#/components/schemas/cTaxon"
                },
                "id": {
                  "example": "1234",
                  "type": "string"
                },
                "type": {
                  "default": "cTaxon",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cTaxons/{id}/relationships/vernacularNames",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "updateCTaxonAcceptedNameResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cTaxon"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "type": {
                "default": "cTaxon",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cTaxons/{id}/relationships/acceptedName",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCTaxonAcceptedNameResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cName"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "type": {
                "default": "cName",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cTaxons/{id}/relationships/acceptedName",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCTaxonResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cTaxon"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "acceptedName": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "synonymNames": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cName"
                              ],
                              "example": "cName",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "vernacularNames": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cVernacularName"
                              ],
                              "example": "cVernacularName",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "cTaxon",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cTaxons/{id}",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCTaxonsResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "properties": {
                "attributes": {
                  "$ref": "#/components/schemas/cTaxon"
                },
                "id": {
                  "example": "1234",
                  "type": "string"
                },
                "relationships": {
                  "properties": {
                    "acceptedName": {
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "additionalProperties": false,
                              "properties": {
                                "id": {
                                  "example": "1234",
                                  "type": "string"
                                },
                                "type": {
                                  "enum": [
                                    "cName"
                                  ],
                                  "example": "cName",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "type": "null"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "object"
                    },
                    "synonymNames": {
                      "additionalProperties": false,
                      "properties": {
                        "data": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "vernacularNames": {
                      "additionalProperties": false,
                      "properties": {
                        "data": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cVernacularName"
                                ],
                                "example": "cVernacularName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "default": "cTaxon",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cTaxons",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCTaxonVersionResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cTaxon"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "acceptedName": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "synonymNames": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cName"
                              ],
                              "example": "cName",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "vernacularNames": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cVernacularName"
                              ],
                              "example": "cVernacularName",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "cTaxon",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cTaxons/{id}/versions/{versionId}",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCTaxonVersionsResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "properties": {
                "attributes": {
                  "$ref": "#/components/schemas/cTaxon"
                },
                "id": {
                  "example": "1234",
                  "type": "string"
                },
                "relationships": {
                  "properties": {
                    "acceptedName": {
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "additionalProperties": false,
                              "properties": {
                                "id": {
                                  "example": "1234",
                                  "type": "string"
                                },
                                "type": {
                                  "enum": [
                                    "cName"
                                  ],
                                  "example": "cName",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "type": "null"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "object"
                    },
                    "synonymNames": {
                      "additionalProperties": false,
                      "properties": {
                        "data": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "vernacularNames": {
                      "additionalProperties": false,
                      "properties": {
                        "data": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cVernacularName"
                                ],
                                "example": "cVernacularName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "default": "cTaxon",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cTaxons/{id}/versions",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "createCNameResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cName"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "acceptedToTaxons": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "basionym": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "origin": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "synonymToTaxons": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "cName",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cNames",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "updateCNameResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cName"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "acceptedToTaxons": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "basionym": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "origin": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "synonymToTaxons": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "cName",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cNames/{id}",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCNameAcceptedToTaxonsResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cTaxon"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "type": {
                "default": "cTaxon",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cNames/{id}/relationships/acceptedToTaxons",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCNameBasionymResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cName"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "type": {
                "default": "cName",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cNames/{id}/relationships/basionym",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "updateCNameBasionymResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cName"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "type": {
                "default": "cName",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cNames/{id}/relationships/basionym",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCNameOriginResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cName"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "type": {
                "default": "cName",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cNames/{id}/relationships/origin",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "updateCNameOriginResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cName"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "type": {
                "default": "cName",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cNames/{id}/relationships/origin",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCNameSynonymToTaxonsResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "properties": {
                "attributes": {
                  "$ref": "#/components/schemas/cTaxon"
                },
                "id": {
                  "example": "1234",
                  "type": "string"
                },
                "type": {
                  "default": "cTaxon",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cNames/{id}/relationships/synonymToTaxons",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCNameResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cName"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "acceptedToTaxons": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "basionym": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "origin": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "synonymToTaxons": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "cName",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cNames/{id}",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCNamesResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "properties": {
                "attributes": {
                  "$ref": "#/components/schemas/cName"
                },
                "id": {
                  "example": "1234",
                  "type": "string"
                },
                "relationships": {
                  "properties": {
                    "acceptedToTaxons": {
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "additionalProperties": false,
                              "properties": {
                                "id": {
                                  "example": "1234",
                                  "type": "string"
                                },
                                "type": {
                                  "enum": [
                                    "cTaxon"
                                  ],
                                  "example": "cTaxon",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "type": "null"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "object"
                    },
                    "basionym": {
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "additionalProperties": false,
                              "properties": {
                                "id": {
                                  "example": "1234",
                                  "type": "string"
                                },
                                "type": {
                                  "enum": [
                                    "cName"
                                  ],
                                  "example": "cName",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "type": "null"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "object"
                    },
                    "origin": {
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "additionalProperties": false,
                              "properties": {
                                "id": {
                                  "example": "1234",
                                  "type": "string"
                                },
                                "type": {
                                  "enum": [
                                    "cName"
                                  ],
                                  "example": "cName",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "type": "null"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "object"
                    },
                    "synonymToTaxons": {
                      "additionalProperties": false,
                      "properties": {
                        "data": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "default": "cName",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cNames",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCNameVersionResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cName"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "acceptedToTaxons": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "basionym": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "origin": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "synonymToTaxons": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "cName",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cNames/{id}/versions/{versionId}",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCNameVersionsResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "properties": {
                "attributes": {
                  "$ref": "#/components/schemas/cName"
                },
                "id": {
                  "example": "1234",
                  "type": "string"
                },
                "relationships": {
                  "properties": {
                    "acceptedToTaxons": {
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "additionalProperties": false,
                              "properties": {
                                "id": {
                                  "example": "1234",
                                  "type": "string"
                                },
                                "type": {
                                  "enum": [
                                    "cTaxon"
                                  ],
                                  "example": "cTaxon",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "type": "null"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "object"
                    },
                    "basionym": {
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "additionalProperties": false,
                              "properties": {
                                "id": {
                                  "example": "1234",
                                  "type": "string"
                                },
                                "type": {
                                  "enum": [
                                    "cName"
                                  ],
                                  "example": "cName",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "type": "null"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "object"
                    },
                    "origin": {
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "additionalProperties": false,
                              "properties": {
                                "id": {
                                  "example": "1234",
                                  "type": "string"
                                },
                                "type": {
                                  "enum": [
                                    "cName"
                                  ],
                                  "example": "cName",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "type": "null"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "object"
                    },
                    "synonymToTaxons": {
                      "additionalProperties": false,
                      "properties": {
                        "data": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "default": "cName",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cNames/{id}/versions",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "createCVernacularNameResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cVernacularName"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "taxons": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "cVernacularName",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cVernacularNames",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "updateCVernacularNameResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cVernacularName"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "taxons": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "cVernacularName",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cVernacularNames/{id}",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCVernacularNameTaxonsResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "properties": {
                "attributes": {
                  "$ref": "#/components/schemas/cTaxon"
                },
                "id": {
                  "example": "1234",
                  "type": "string"
                },
                "type": {
                  "default": "cTaxon",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cVernacularNames/{id}/relationships/taxons",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCVernacularNameResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cVernacularName"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "taxons": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "cVernacularName",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cVernacularNames/{id}",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCVernacularNamesResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "properties": {
                "attributes": {
                  "$ref": "#/components/schemas/cVernacularName"
                },
                "id": {
                  "example": "1234",
                  "type": "string"
                },
                "relationships": {
                  "properties": {
                    "taxons": {
                      "additionalProperties": false,
                      "properties": {
                        "data": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "default": "cVernacularName",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cVernacularNames",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCVernacularNameVersionResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cVernacularName"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "taxons": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "cVernacularName",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cVernacularNames/{id}/versions/{versionId}",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCVernacularNameVersionsResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "properties": {
                "attributes": {
                  "$ref": "#/components/schemas/cVernacularName"
                },
                "id": {
                  "example": "1234",
                  "type": "string"
                },
                "relationships": {
                  "properties": {
                    "taxons": {
                      "additionalProperties": false,
                      "properties": {
                        "data": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "default": "cVernacularName",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cVernacularNames/{id}/versions",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "createCcTaxonResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/ccTaxon"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "acceptedName": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "ancestors": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "descendants": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "synonymNames": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cName"
                              ],
                              "example": "cName",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "vernacularNames": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cVernacularName"
                              ],
                              "example": "cVernacularName",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "ccTaxon",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/classifications/{id}/ccTaxons",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "updateCcTaxonResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/ccTaxon"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "acceptedName": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "ancestors": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "descendants": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "synonymNames": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cName"
                              ],
                              "example": "cName",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "vernacularNames": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cVernacularName"
                              ],
                              "example": "cVernacularName",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "ccTaxon",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/classifications/{id}/ccTaxons/{id}",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCcTaxonAncestorsResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "properties": {
                "attributes": {
                  "$ref": "#/components/schemas/cTaxon"
                },
                "id": {
                  "example": "1234",
                  "type": "string"
                },
                "type": {
                  "default": "cTaxon",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/classifications/{id}/ccTaxons/{id}/relationships/ancestors",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCcTaxonChildrenResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "properties": {
                "attributes": {
                  "$ref": "#/components/schemas/cTaxon"
                },
                "id": {
                  "example": "1234",
                  "type": "string"
                },
                "type": {
                  "default": "cTaxon",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/classifications/{id}/ccTaxons/{id}/relationships/children",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCcTaxonDescendantsResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "properties": {
                "attributes": {
                  "$ref": "#/components/schemas/cTaxon"
                },
                "id": {
                  "example": "1234",
                  "type": "string"
                },
                "type": {
                  "default": "cTaxon",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/classifications/{id}/ccTaxons/{id}/relationships/descendants",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCcTaxonSynonymNamesResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "properties": {
                "attributes": {
                  "$ref": "#/components/schemas/cName"
                },
                "id": {
                  "example": "1234",
                  "type": "string"
                },
                "type": {
                  "default": "cName",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/classifications/{id}/ccTaxons/{id}/relationships/synonymNames",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "updateCcTaxonSynonymNamesResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "properties": {
                "attributes": {
                  "$ref": "#/components/schemas/ccTaxon"
                },
                "id": {
                  "example": "1234",
                  "type": "string"
                },
                "type": {
                  "default": "ccTaxon",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/classifications/{id}/ccTaxons/{id}/relationships/synonymNames",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCcTaxonVernacularNamesResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "properties": {
                "attributes": {
                  "$ref": "#/components/schemas/cVernacularName"
                },
                "id": {
                  "example": "1234",
                  "type": "string"
                },
                "type": {
                  "default": "cVernacularName",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/classifications/{id}/ccTaxons/{id}/relationships/vernacularNames",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "updateCcTaxonVernacularNamesResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "properties": {
                "attributes": {
                  "$ref": "#/components/schemas/ccTaxon"
                },
                "id": {
                  "example": "1234",
                  "type": "string"
                },
                "type": {
                  "default": "ccTaxon",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/classifications/{id}/ccTaxons/{id}/relationships/vernacularNames",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "updateCcTaxonAcceptedNameResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/ccTaxon"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "type": {
                "default": "ccTaxon",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/classifications/{id}/ccTaxons/{id}/relationships/acceptedName",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCcTaxonAcceptedNameResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cName"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "type": {
                "default": "cName",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/classifications/{id}/ccTaxons/{id}/relationships/acceptedName",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "updateCcTaxonParentResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/ccTaxon"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "type": {
                "default": "ccTaxon",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/classifications/{id}/ccTaxons/{id}/relationships/parent",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCcTaxonParentResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cTaxon"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "type": {
                "default": "cTaxon",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/classifications/{id}/ccTaxons/{id}/relationships/parent",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCcTaxonResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/ccTaxon"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "acceptedName": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "ancestors": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "descendants": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "synonymNames": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cName"
                              ],
                              "example": "cName",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "vernacularNames": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cVernacularName"
                              ],
                              "example": "cVernacularName",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "ccTaxon",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/classifications/{id}/ccTaxons/{id}",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCcTaxonsResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "properties": {
                "attributes": {
                  "$ref": "#/components/schemas/ccTaxon"
                },
                "id": {
                  "example": "1234",
                  "type": "string"
                },
                "relationships": {
                  "properties": {
                    "acceptedName": {
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "additionalProperties": false,
                              "properties": {
                                "id": {
                                  "example": "1234",
                                  "type": "string"
                                },
                                "type": {
                                  "enum": [
                                    "cName"
                                  ],
                                  "example": "cName",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "type": "null"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "object"
                    },
                    "ancestors": {
                      "additionalProperties": false,
                      "properties": {
                        "data": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "children": {
                      "additionalProperties": false,
                      "properties": {
                        "data": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "descendants": {
                      "additionalProperties": false,
                      "properties": {
                        "data": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "parent": {
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "additionalProperties": false,
                              "properties": {
                                "id": {
                                  "example": "1234",
                                  "type": "string"
                                },
                                "type": {
                                  "enum": [
                                    "cTaxon"
                                  ],
                                  "example": "cTaxon",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "type": "null"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "object"
                    },
                    "synonymNames": {
                      "additionalProperties": false,
                      "properties": {
                        "data": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "vernacularNames": {
                      "additionalProperties": false,
                      "properties": {
                        "data": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cVernacularName"
                                ],
                                "example": "cVernacularName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "default": "ccTaxon",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/classifications/{id}/ccTaxons",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCcTaxonVersionResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/ccTaxon"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "acceptedName": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "ancestors": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "children": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "descendants": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cTaxon"
                              ],
                              "example": "cTaxon",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "parent": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "synonymNames": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cName"
                              ],
                              "example": "cName",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "vernacularNames": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cVernacularName"
                              ],
                              "example": "cVernacularName",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "ccTaxon",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/classifications/{id}/ccTaxons/{id}/versions/{versionId}",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCcTaxonVersionsResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "properties": {
                "attributes": {
                  "$ref": "#/components/schemas/ccTaxon"
                },
                "id": {
                  "example": "1234",
                  "type": "string"
                },
                "relationships": {
                  "properties": {
                    "acceptedName": {
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "additionalProperties": false,
                              "properties": {
                                "id": {
                                  "example": "1234",
                                  "type": "string"
                                },
                                "type": {
                                  "enum": [
                                    "cName"
                                  ],
                                  "example": "cName",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "type": "null"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "object"
                    },
                    "ancestors": {
                      "additionalProperties": false,
                      "properties": {
                        "data": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "children": {
                      "additionalProperties": false,
                      "properties": {
                        "data": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "descendants": {
                      "additionalProperties": false,
                      "properties": {
                        "data": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "parent": {
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "additionalProperties": false,
                              "properties": {
                                "id": {
                                  "example": "1234",
                                  "type": "string"
                                },
                                "type": {
                                  "enum": [
                                    "cTaxon"
                                  ],
                                  "example": "cTaxon",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "type": "null"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "object"
                    },
                    "synonymNames": {
                      "additionalProperties": false,
                      "properties": {
                        "data": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "vernacularNames": {
                      "additionalProperties": false,
                      "properties": {
                        "data": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cVernacularName"
                                ],
                                "example": "cVernacularName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "default": "ccTaxon",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/classifications/{id}/ccTaxons/{id}/versions",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "createCNodeResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cNode"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "childTaxon": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "classification": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "parentTaxon": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "cNode",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cNodes",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "updateCNodeResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cNode"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "childTaxon": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "classification": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "parentTaxon": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "cNode",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cNodes/{id}",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCNodeChildTaxonResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cTaxon"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "type": {
                "default": "cTaxon",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cNodes/{id}/relationships/childTaxon",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "updateCNodeChildTaxonResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cNode"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "type": {
                "default": "cNode",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cNodes/{id}/relationships/childTaxon",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCNodeClassificationResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cName"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "type": {
                "default": "cName",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cNodes/{id}/relationships/classification",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "updateCNodeClassificationResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cNode"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "type": {
                "default": "cNode",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cNodes/{id}/relationships/classification",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCNodeParentTaxonResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cTaxon"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "type": {
                "default": "cTaxon",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cNodes/{id}/relationships/parentTaxon",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "updateCNodeParentTaxonResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cNode"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "type": {
                "default": "cNode",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cNodes/{id}/relationships/parentTaxon",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCNodeResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cNode"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "childTaxon": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "classification": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "parentTaxon": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "cNode",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cNodes/{id}",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCNodesResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "properties": {
                "attributes": {
                  "$ref": "#/components/schemas/cNode"
                },
                "id": {
                  "example": "1234",
                  "type": "string"
                },
                "relationships": {
                  "properties": {
                    "childTaxon": {
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "additionalProperties": false,
                              "properties": {
                                "id": {
                                  "example": "1234",
                                  "type": "string"
                                },
                                "type": {
                                  "enum": [
                                    "cTaxon"
                                  ],
                                  "example": "cTaxon",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "type": "null"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "object"
                    },
                    "classification": {
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "additionalProperties": false,
                              "properties": {
                                "id": {
                                  "example": "1234",
                                  "type": "string"
                                },
                                "type": {
                                  "enum": [
                                    "cName"
                                  ],
                                  "example": "cName",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "type": "null"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "object"
                    },
                    "parentTaxon": {
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "additionalProperties": false,
                              "properties": {
                                "id": {
                                  "example": "1234",
                                  "type": "string"
                                },
                                "type": {
                                  "enum": [
                                    "cTaxon"
                                  ],
                                  "example": "cTaxon",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "type": "null"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "default": "cNode",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cNodes",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCNodeVersionResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cNode"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "childTaxon": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "classification": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cName"
                                ],
                                "example": "cName",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "parentTaxon": {
                    "oneOf": [
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cTaxon"
                                ],
                                "example": "cTaxon",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      {
                        "additionalProperties": false,
                        "properties": {
                          "data": {
                            "type": "null"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "cNode",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cNodes/{id}/versions/{versionId}",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCNodeVersionsResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "properties": {
                "attributes": {
                  "$ref": "#/components/schemas/cNode"
                },
                "id": {
                  "example": "1234",
                  "type": "string"
                },
                "relationships": {
                  "properties": {
                    "childTaxon": {
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "additionalProperties": false,
                              "properties": {
                                "id": {
                                  "example": "1234",
                                  "type": "string"
                                },
                                "type": {
                                  "enum": [
                                    "cTaxon"
                                  ],
                                  "example": "cTaxon",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "type": "null"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "object"
                    },
                    "classification": {
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "additionalProperties": false,
                              "properties": {
                                "id": {
                                  "example": "1234",
                                  "type": "string"
                                },
                                "type": {
                                  "enum": [
                                    "cName"
                                  ],
                                  "example": "cName",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "type": "null"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "object"
                    },
                    "parentTaxon": {
                      "oneOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "additionalProperties": false,
                              "properties": {
                                "id": {
                                  "example": "1234",
                                  "type": "string"
                                },
                                "type": {
                                  "enum": [
                                    "cTaxon"
                                  ],
                                  "example": "cTaxon",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "additionalProperties": false,
                          "properties": {
                            "data": {
                              "type": "null"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "default": "cNode",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cNodes/{id}/versions",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "createCClassificationResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cClassification"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "nodes": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cNode"
                              ],
                              "example": "cNode",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "cClassification",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cClassifications",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "updateCClassificationResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cClassification"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "nodes": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cNode"
                              ],
                              "example": "cNode",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "cClassification",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cClassifications/{id}",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCClassificationNodesResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "properties": {
                "attributes": {
                  "$ref": "#/components/schemas/cNode"
                },
                "id": {
                  "example": "1234",
                  "type": "string"
                },
                "type": {
                  "default": "cNode",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cClassifications/{id}/relationships/nodes",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCClassificationResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cClassification"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "nodes": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cNode"
                              ],
                              "example": "cNode",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "cClassification",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cClassifications/{id}",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCClassificationsResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "properties": {
                "attributes": {
                  "$ref": "#/components/schemas/cClassification"
                },
                "id": {
                  "example": "1234",
                  "type": "string"
                },
                "relationships": {
                  "properties": {
                    "nodes": {
                      "additionalProperties": false,
                      "properties": {
                        "data": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cNode"
                                ],
                                "example": "cNode",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "default": "cClassification",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cClassifications",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCClassificationVersionResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/cClassification"
              },
              "id": {
                "example": "1234",
                "type": "string"
              },
              "relationships": {
                "properties": {
                  "nodes": {
                    "additionalProperties": false,
                    "properties": {
                      "data": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "id": {
                              "example": "1234",
                              "type": "string"
                            },
                            "type": {
                              "enum": [
                                "cNode"
                              ],
                              "example": "cNode",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": {
                "default": "cClassification",
                "type": "string"
              }
            },
            "type": "object"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cClassifications/{id}/versions/{versionId}",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      },
      "getCClassificationVersionsResponse": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": false,
            "items": {
              "additionalProperties": false,
              "properties": {
                "attributes": {
                  "$ref": "#/components/schemas/cClassification"
                },
                "id": {
                  "example": "1234",
                  "type": "string"
                },
                "relationships": {
                  "properties": {
                    "nodes": {
                      "additionalProperties": false,
                      "properties": {
                        "data": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "example": "1234",
                                "type": "string"
                              },
                              "type": {
                                "enum": [
                                  "cNode"
                                ],
                                "example": "cNode",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "default": "cClassification",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "jsonapi": {
            "type": "object"
          },
          "links": {
            "properties": {
              "self": {
                "example": "https://domain/api/taxonomy/v01/cClassifications/{id}/versions",
                "format": "uri",
                "type": "string",
                "x-faker": "internet.url"
              }
            },
            "type": "object"
          },
          "meta": {
            "type": "object"
          }
        },
        "type": "object",
        "x-examples": {},
        "description": ""
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  }
}